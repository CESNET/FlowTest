---
- name: Required tools are installed
  ansible.builtin.dnf:
    name: nfb-framework
    state: latest

- name: FlowTest FPGA Firmware ({{ firmware }}) is installed
  ansible.builtin.dnf:
    name: "ndk-fw-{{ firmware }}"
    state: latest

- name: Make sure NFB kernel module is loaded
  ansible.builtin.command: "modprobe nfb"

- name: Make sure the FPGA card ({{ card }}) is available
  ansible.builtin.stat:
    path: "{{ card }}"
    follow: true
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: card_stat
  failed_when: not card_stat.stat.exists

- name: Determine escaped systemd path of the FPGA card ({{ card }})
  ansible.builtin.command: "systemd-escape -p {{ card | ansible.builtin.realpath }}"
  register: card_escaped

- name: Install NFB-TSU systemd service
  ansible.builtin.copy:
    src: nfb-tsu@.service
    dest: /run/systemd/system/nfb-tsu@.service

# If the system was previously configured, a running NFB-TSU would block the reboot.
- name: Stop NFB-TSU systemd service (if running)
  ansible.builtin.systemd:
    daemon_reload: true
    name: "nfb-tsu@{{ card_escaped.stdout }}.service"
    state: stopped

- name: Boot the FPGA card ({{ card }}) with the firmware ({{ firmware }})
  ansible.builtin.command: "nfb-boot -d {{ card }} -b 0 \"{{ firmware_dir }}/{{ firmware }}.nfw\""

- name: Start NFB-TSU systemd service
  ansible.builtin.systemd:
    name: "nfb-tsu@{{ card_escaped.stdout }}.service"
    state: started

- name: Enable Ethernet interfaces on the card ({{ card }})
  ansible.builtin.command: "nfb-eth -d {{ card }} -e 1"

---
- name: Make sure the FPGA card ({{ nfb_card }}) is available
  ansible.builtin.stat:
    path: "{{ nfb_card }}"
    follow: true
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: card_stat
  failed_when: not card_stat.stat.exists

- name: Determine FPGA card name ({{ nfb_card }})
  ansible.builtin.command: "nfb-info -d {{ nfb_card }} -q card"
  register: card_name

- name: Determine required firmware for FPGA card ({{ nfb_card }})
  ansible.builtin.set_fact:
    card_firmware: "{{ ndk_nic_firmwares[card_name.stdout]['design'] }}"

- name: FlowTest FPGA Firmware ({{ card_firmware }}) is installed
  ansible.builtin.dnf:
    name: "ndk-fw-{{ card_firmware }}"
    state: latest

- name: Boot the FPGA card ({{ nfb_card }}) with the firmware ({{ card_firmware }})
  ansible.builtin.command: "nfb-boot -d {{ nfb_card }} -b 0 \"{{ firmware_path }}\""
  vars:
    firmware_path: "{{ nfb_firmware_dir }}/{{ card_firmware }}.nfw"

- name: Set MTU of Ethernet interfaces
  ansible.builtin.command: "nfb-eth -d {{ nfb_card }} -L {{ nfb_mtu | int }}"
  when: nfb_mtu

- name: Set PMA of Ethernet interfaces
  ansible.builtin.command: "nfb-eth -d {{ nfb_card }} -Pc \"{{ nfb_pma }}\""
  when: nfb_pma

- name: Start NFB-TSU systemd service
  ansible.builtin.include_role:
    name: nfb_tsu
  vars:
    nfb_tsu_enable: true

- name: Enable Ethernet interfaces on the card ({{ nfb_card }})
  ansible.builtin.command: "nfb-eth -d {{ nfb_card }} -e 1"
